<?php

/**
 * @file
 * This file contains code which deals with altering the site information
 * form.
 * Representing the basic page nodes into json.
 */

/**
 * Implements hook_form_alter().
 *
 * @param @form @form_state @form_id
 */
function axelerant_assignment_form_alter(&$form, &$form_state, $form_id) {

  if ($form_id == 'system_site_information_settings') {
    $form['site_api_key_fieldset'] = array(
      '#type' => 'fieldset',
      '#title' => t('API Key'),
    );
    $form['site_api_key_fieldset']['site_api_key'] = array(
      '#type' => 'textfield',
      '#title' => t('Site API Key'),
      '#default_value' => !empty(variable_get('siteapikey')) ? variable_get('siteapikey', '') : check_plain(t('No API Key yet')),
      '#description' => t('Please enter the site api key.'),
    );

    $form['actions']['submit']['#value'] = check_plain(t('Update Configuration'));

    // Custom submit handler for site site information form.
    $form['#submit'][] = '_axelerant_assignment_submit_handler';
  }

}

/**
 * Implements custom submit handler.
 *
 * @param $form $form_state
 */
function _axelerant_assignment_submit_handler($form, &$form_state) {
  // Setting the api key value to variable.
  variable_set('siteapikey', $form_state['values']['site_api_key']);

  if (!empty($form_state['values']['site_api_key'])) {
    drupal_set_message(check_plain(t('Site API Key has been saved: @var', array('@var' => $form_state['values']['site_api_key']))), 'status');
  }

}

/**
 * Implements hook_menu().
 *
 * @return $items
 */
function axelerant_assignment_menu() {
  $items = array();
  $items['page_json/%/%'] = array(
    'page callback' => '_page_content_type_json_ouput',
    'access callback' => 'user_access',
    'access arguments' => array('administer users'),
    'type' => MENU_LOCAL_TASK,
  );
  return $items;

}

/**
 * Implements custom page callback for json representation of
 * Basic page content type.
 *
 * @return json_string
 *    [<Json representation of node>]
 */
function _page_content_type_json_ouput() {
  // Get the site api key and node id from URL.
  $siteapi_arg = arg(1);
  $check_node_id = arg(2);
  $node_exists = node_load($check_node_id);
  $get_siteapi_key = variable_get('siteapikey');

  if ($siteapi_arg ==  $get_siteapi_key && !empty($node_exists) &&
   $node_exists->type == 'page') {
    $json_string = json_encode($node_exists, JSON_PRETTY_PRINT);
    return $json_string;
  }
  else {
    drupal_access_denied();
  }

}
